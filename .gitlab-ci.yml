# Proximoth CI/CD By TechnicalUserX

variables:
  PROJECT: proximoth
  AUTHOR: technicaluserx
  DOCKER_PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64/v8
  TEST_IMAGE: debian:bookworm-slim

stages:
  - Test
  - Build

GTest AMD64:
  stage: Test
  image: amd64/$TEST_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH != null && $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  before_script:
    - apt update -y
    - apt install g++ -y
    - apt install make -y
    - apt install libgtest-dev -y
    - apt install libpcap-dev -y
  script:
    - cd tests
    - make
    - make test

GTest ARM32v7:
  stage: Test
  image: arm32v7/$TEST_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH != null && $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  before_script:
    - apt update -y
    - apt install g++ -y
    - apt install make -y
    - apt install libgtest-dev -y
    - apt install libpcap-dev -y
  script:
    - cd tests
    - make
    - make test

GTest ARM64v8:
  stage: Test
  image: arm64v8/$TEST_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH != null && $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  before_script:
    - apt update -y
    - apt install g++ -y
    - apt install make -y
    - apt install libgtest-dev -y
    - apt install libpcap-dev -y
  script:
    - cd tests
    - make
    - make test

Compile AMD64:
  stage: Test
  image: amd64/$TEST_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH != null && $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  before_script:
    - apt update -y
    - apt install gcc -y
    - apt install make -y
    - apt install libpcap-dev -y
  script:
    - make
    - make install
    - cd tests
    - chmod +x test-proximoth.sh
    - ./test-proximoth.sh

Compile ARM32v7:
  stage: Test
  image: arm32v7/$TEST_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH != null && $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  before_script:
    - apt update -y
    - apt install gcc -y
    - apt install make -y
    - apt install libpcap-dev -y
  script:
    - make
    - make install
    - cd tests
    - chmod +x test-proximoth.sh
    - ./test-proximoth.sh

Compile ARM64v8:
  stage: Test
  image: arm32v7/$TEST_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH != null && $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"
  before_script:
    - apt update -y
    - apt install gcc -y
    - apt install make -y
    - apt install libpcap-dev -y
  script:
    - make
    - make install
    - cd tests
    - chmod +x test-proximoth.sh
    - ./test-proximoth.sh

Docker Image:
  stage: Build
  image: docker:24.0
  services:
    - docker:24.0-dind
  rules:
    - if: $CI_COMMIT_TAG != null && $CI_PIPELINE_SOURCE == "push"
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_TOKEN
  script:
    - docker context create multiarch_context
    - docker context use multiarch_context
    - docker buildx create --name multiarch_builder multiarch_context
    - docker buildx use multiarch_builder
    - docker buildx build -t $AUTHOR/$PROJECT:$CI_COMMIT_TAG -t $AUTHOR/$PROJECT:latest --platform=$DOCKER_PLATFORMS --push . 
